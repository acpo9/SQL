-- In this SQL code I dig into sales data to answer questions. The tables within the database are pretty simple, so a lot of joins are used.

-- 1. Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT
    CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE Country != 'USA';

-- Might be preferable to have the full name of the customer sometimes, so let's see what that looks like:
SELECT
    CustomerID, FirstName || ' ' || LastName AS FullName, Country
FROM chinook.customers
WHERE Country != 'USA';



-- 2. Show only the Customers from Brazil.
SELECT
    CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE Country = 'Brazil';

-- 3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT 
    c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM
    chinook.invoices AS i
    LEFT JOIN chinook.customers AS c
    USING(CustomerId)
WHERE i.BillingCountry = 'Brazil';


-- 4. Show the Employees who are Sales Agents.
SELECT
    EmployeeId, LastName, FirstName, Title
FROM chinook.employees
WHERE Title LIKE '%Sales%Agent%';


-- 5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT
    DISTINCT BillingCountry
FROM
    chinook.invoices;

-- 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT
    i.InvoiceId, e.FirstName, e.LastName
FROM
    chinook.employees AS e
    JOIN chinook.customers AS c
    ON e.EmployeeId = c.SupportRepId
    JOIN chinook.invoices AS i
    ON c.CustomerId = i.CustomerId;
    

-- 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT 
    i.Total, c.FirstName, c.LastName, c.Country, e.FirstName AS SalesAgentFirstName, e.LastName AS SalesAgentLastName
FROM
    chinook.employees AS e
    JOIN chinook.customers AS c
    ON e.EmployeeId = c.SupportRepId
    JOIN chinook.invoices AS i
    ON c.CustomerId = i.CustomerId;

-- 8. How many Invoices were there in 2009?
SELECT
    COUNT(*) AS total_invoices
FROM
    chinook.invoices
WHERE 
    InvoiceDate LIKE '2009%';
    

-- 9. What are the total sales for 2009?
SELECT
    SUM(Total) AS total_sales_2009
FROM
    chinook.invoices
WHERE
    InvoiceDate LIKE '2009%'
    

-- 10. Write a query that includes the purchased track name with each invoice line item.
SELECT
    i.InvoiceLineId, t.Name
FROM
    chinook.invoice_items AS i
    JOIN
        chinook.tracks AS t
        USING(TrackId);


-- 11. Write a query that includes the purchased track name AND artist name with each invoice line item.
SELECT
    i.InvoiceLineId, t.Name AS track_name, a.Name AS artist
FROM
    chinook.invoice_items AS i
    JOIN
        chinook.tracks AS t
        USING(TrackId)
    JOIN chinook.albums AS al
        USING(AlbumID)
    JOIN chinook.artists AS a
        USING(ArtistId);
/* This one was a bit funky because the artist table didn't share any columns with invoice_items or tracks, so I had to join the albums table which could join to tracks, then join the artists to that*/

-- 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT
    t.Name AS 'Track', a.Title As 'Album', m.Name AS 'Media', g.Name AS 'Genre'
FROM
    chinook.tracks AS t
    JOIN
        chinook.albums AS a
        USING(AlbumId)
    JOIN
        chinook.media_types AS m
        ON t.MediaTypeId = m.MediaTypeId
    JOIN
        chinook.genres AS g
        ON t.GenreId = g.GenreId;

-- 13. Show the total sales made by each sales agent.
SELECT
    e.FirstName, e.LastName, ROUND(SUM(i.Total),2) AS TotalSales
FROM chinook.customers c
    JOIN chinook.employees e
        ON c.SupportRepId = e.EmployeeId
    JOIN chinook.invoices i
        ON c.CustomerId = i.CustomerId
WHERE e.Title LIKE '%Sales%Agent%'
GROUP BY e.FirstName;

-- 14. Which sales agent made the most in sales in 2009?

SELECT
    e.FirstName, e.LastName, ROUND(SUM(i.Total),2) AS TotalSales
FROM chinook.customers c
    JOIN chinook.employees e
        ON c.SupportRepId = e.EmployeeId
    JOIN chinook.invoices i
        ON c.CustomerId = i.CustomerId
WHERE e.Title LIKE '%Sales%Agent%' AND i.InvoiceDate LIKE '2009%'
GROUP BY e.FirstName
ORDER BY TotalSales DESC
LIMIT 1;
